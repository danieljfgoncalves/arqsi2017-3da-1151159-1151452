// <auto-generated />
using ElectronicPrescription.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ElectronicPrescription.Migrations
{
    [DbContext(typeof(ElectronicPrescriptionContext))]
    [Migration("20171007194235_PrescriptionPresentationRelationChanged")]
    partial class PrescriptionPresentationRelationChanged
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElectronicPrescription.Models.MedicalReceipt", b =>
                {
                    b.Property<int>("MedicalReceiptId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.HasKey("MedicalReceiptId");

                    b.ToTable("MedicalReceipt");
                });

            modelBuilder.Entity("ElectronicPrescription.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<int?>("MedicalReceiptId");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("MedicalReceiptId");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("ElectronicPrescription.Models.Presentation", b =>
                {
                    b.Property<int>("PresentationId");

                    b.Property<float>("Concentration");

                    b.Property<string>("Form");

                    b.Property<int>("Quantity");

                    b.HasKey("PresentationId");

                    b.ToTable("Presentation");
                });

            modelBuilder.Entity("ElectronicPrescription.Models.Prescription", b =>
                {
                    b.HasOne("ElectronicPrescription.Models.MedicalReceipt", "MedicalReceipt")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicalReceiptId");
                });

            modelBuilder.Entity("ElectronicPrescription.Models.Presentation", b =>
                {
                    b.HasOne("ElectronicPrescription.Models.Prescription", "Prescription")
                        .WithOne("Presentation")
                        .HasForeignKey("ElectronicPrescription.Models.Presentation", "PresentationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
